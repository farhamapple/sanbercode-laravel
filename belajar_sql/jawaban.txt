Soal 1

CREATE DATABASE myshop;

Soal 2

create table users(
   id INT NOT NULL AUTO_INCREMENT,
   name VARCHAR(255) NOT NULL,
   email VARCHAR(255) NOT NULL,
   password VARCHAR(255) NOT NULL,
   PRIMARY KEY ( id )
);

create table categories(
   id INT NOT NULL AUTO_INCREMENT,
   name VARCHAR(255) NOT NULL,
   PRIMARY KEY ( id )
);

create table items(
   id INT NOT NULL AUTO_INCREMENT,
   name VARCHAR(255) NOT NULL,
   description VARCHAR(255) NOT NULL,
   price INT NOT NULL,
	 stock INT NOT NULL,
	 category_id INT,
   PRIMARY KEY ( id ),
	 FOREIGN KEY (category_id) REFERENCES categories(id)
);

Soal 3

INSERT INTO users (name, email,password) values ('John Doe', 'john@doe.com', 'john123');
INSERT INTO users (name, email,password) values ('Jane Doe', 'jane.com', 'jane123');

INSERT INTO categories ( name )
VALUES
	( 'gadget');
	INSERT INTO categories ( name )
VALUES
	( 'cloth');
	INSERT INTO categories ( name )
VALUES
	( 'men');
	INSERT INTO categories ( name )
VALUES
	( 'women');
	INSERT INTO categories ( name )
VALUES
	( 'branded');


INSERT INTO items ( name, description, price, stock, category_id )
VALUES
	( 'Sumsang b50', 'hape keren dari merek sumsang', 4000000,100,1  );
	INSERT INTO items ( name, description, price, stock, category_id )
VALUES
	( 'Uniklooh', 'baju keren dari brand ternama', 500000,50,2  );
	INSERT INTO items ( name, description, price, stock, category_id )
VALUES
	( 'IMHO Watch', 'jam tangan anak yang jujur banget', 2000000,10,1  );


Soal 4

a. Mengambil data users
Buatlah sebuah query untuk mendapatkan data seluruh user pada table users. Sajikan semua field pada table users KECUALI password nya.

select name, email from users;

b. Mengambil data items
Buatlah sebuah query untuk mendapatkan data item pada table items yang memiliki harga di atas 1000000 (satu juta).

select * from items where price > 1000000; 

Buat sebuah query untuk mengambil data item pada table items yang memiliki name serupa atau mirip (like) dengan kata kunci “uniklo”, “watch”, atau “sang” (pilih salah satu saja).

select * from items where name like '%imho%' ;

c. Menampilkan data items join dengan kategori
Buatlah sebuah query untuk menampilkan data items yang dilengkapi dengan data nama kategori di masing-masing items. Berikut contoh tampilan data yang ingin didapatkan

select a.*, b.name as kategori from items a 
join categories b on a.category_id=b.id;

https://drive.google.com/drive/folders/1S3gA6nEH5ZfDsmNkIDs900l2mSmBGl1p?usp=sharing